taskKey="com.javarush.task.task32.task3205"\n\nСоздание прокси-объекта

1) В отдельном файле создай публичный класс com.javarush.task.task32.task3205.CustomInvocationHandler, который будет хэндлером при создании прокси-объекта.
2) com.javarush.task.task32.task3205.CustomInvocationHandler должен поддерживать интерфейс InvocationHandler.
3) com.javarush.task.task32.task3205.CustomInvocationHandler должен иметь один публичный конструктор с одним аргументом типа SomeInterfaceWithMethods.
4) Перед вызовом любого метода у оригинального объекта должна выводиться фраза [methodName in].
5) После вызова любого метода у оригинального объекта должна выводиться фраза [methodName out].
6) Реализуй логику метода getProxy, который должен создавать прокси (Proxy.newProxyInstance(...)).
См. пример вывода в методе main.
Метод main не участвует в тестировании.


Требования:
1.	Класс com.javarush.task.task32.task3205.CustomInvocationHandler должен существовать.
2.	Класс com.javarush.task.task32.task3205.CustomInvocationHandler должен поддерживать интерфейс InvocationHandler.
3.	Класс com.javarush.task.task32.task3205.CustomInvocationHandler должен иметь один публичный конструктор с одним аргументом типа SomeInterfaceWithMethods.
4.	Перед вызовом любого метода у оригинального объекта должна выводиться фраза [methodName in].
5.	После вызова любого метода у оригинального объекта должна выводиться фраза [methodName out].
6.	Метод getProxy должен создавать прокси для интерфейса SomeInterfaceWithMethods.


